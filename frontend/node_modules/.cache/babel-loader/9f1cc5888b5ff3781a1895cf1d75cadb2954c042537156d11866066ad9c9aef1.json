{"ast":null,"code":"var _jsxFileName = \"C:\\\\earthquake\\\\frontend\\\\src\\\\weather.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: \"d6536e139981446b8a734cd33ee9b21e\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\nfunction App() {\n  _s();\n  const [forecast, setForecast] = useState([]);\n  useEffect(() => {\n    // Set the city to \"Taguig\" by default\n    const defaultCity = \"Taguig\";\n\n    // Make a fetch call to the Open Weather Map API for 7-day forecast.\n    fetch(`${api.base}forecast?q=${defaultCity}&units=metric&APPID=${api.key}`).then(res => res.json()).then(result => {\n      console.log(\"Fetched Data:\", result);\n\n      // Extract one data point per day\n      const dailyForecast = result.list.filter(data => data.dt_txt.includes(\"12:00:00\"));\n      setForecast(dailyForecast);\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n    });\n  }, []); // Empty dependency array to ensure it runs only once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Weather App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Taguig City 5 Days Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), forecast.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Average Temperature (\\xB0C)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Temperature Range (\\xB0C)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Wind Speed (m/s)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: forecast.map((data, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.dt_txt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.main.temp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [data.main.temp_min, \" - \", data.main.temp_max]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.weather[0].description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.wind.speed\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this) : \"Loading...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Ydn6hUZqbmyQnL7JGFANHgW/va4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","api","key","base","App","_s","forecast","setForecast","defaultCity","fetch","then","res","json","result","console","log","dailyForecast","list","filter","data","dt_txt","includes","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","main","temp","temp_min","temp_max","weather","description","wind","speed","_c","$RefreshReg$"],"sources":["C:/earthquake/frontend/src/weather.js"],"sourcesContent":["import \"./App.css\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst api = {\r\n  key: \"d6536e139981446b8a734cd33ee9b21e\",\r\n  base: \"https://api.openweathermap.org/data/2.5/\",\r\n};\r\n\r\nfunction App() {\r\n  const [forecast, setForecast] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Set the city to \"Taguig\" by default\r\n    const defaultCity = \"Taguig\";\r\n\r\n    // Make a fetch call to the Open Weather Map API for 7-day forecast.\r\n    fetch(`${api.base}forecast?q=${defaultCity}&units=metric&APPID=${api.key}`)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        console.log(\"Fetched Data:\", result);\r\n\r\n        // Extract one data point per day\r\n        const dailyForecast = result.list.filter((data) =>\r\n          data.dt_txt.includes(\"12:00:00\")\r\n        );\r\n\r\n        setForecast(dailyForecast);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data:\", error);\r\n      });\r\n  }, []); // Empty dependency array to ensure it runs only once when the component mounts\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        {/* HEADER  */}\r\n        <h1>Weather App</h1>\r\n        <h2>Taguig City 5 Days Forecast</h2>\r\n\r\n        {/* If forecast is not undefined, display results from API */}\r\n        {forecast.length > 0 ? (\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Date</th>\r\n                <th>Average Temperature (°C)</th>\r\n                <th>Temperature Range (°C)</th>\r\n                <th>Description</th>\r\n                <th>Wind Speed (m/s)</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {/* Display the next 7 days forecast */}\r\n              {forecast.map((data, index) => (\r\n                <tr key={index}>\r\n                  {/* Date */}\r\n                  <td>{data.dt_txt}</td>\r\n\r\n                  {/* Temperature */}\r\n                  <td>{data.main.temp}</td>\r\n                  <td>{data.main.temp_min} - {data.main.temp_max}</td>\r\n\r\n                  {/* Description */}\r\n                  <td>{data.weather[0].description}</td>\r\n\r\n                  {/* Wind Speed */}\r\n                  <td>{data.wind.speed}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          \"Loading...\"\r\n        )}\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}